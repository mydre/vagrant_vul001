# -*- mode: ruby -*-
# vi: set ft=ruby :

# This file was generated by SecGen

# 2022-09-23_15:55:58
# Based on scenarios/labs/introducing_attacks/1_intro_linux.xml

VAGRANTFILE_API_VERSION = "2"

unless Vagrant.has_plugin?("vagrant-docker-compose")
  system("vagrant plugin install vagrant-docker-compose")
  puts "Dependencies installed, please try the command again."
  exit
end
HOME_DISK = "/home/uxx/home.vdi"
Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
    config.vm.define 'vm' do |desktop|
        # config.vm.box = "chenhan/ubuntu-desktop-20.04" # 64GB, work well
        # config.vm.box = "bento/ubuntu-20.04" # has not desktop
        config.vm.box = "bflance/ubuntu-20.10-desktop" # ssh error
        # config.vm.box = "sbeliakou/centos"
        config.vm.box_check_update = false
        config.disksize.size = '20GB'
        desktop.vm.provider :virtualbox do |vb|
            vb.gui = true
            vb.memory = '2048'
            # vb.customize ['modifyvm', :id, '--pae', 'on']
            # vb.customize ['modifyvm', :id, '--hwvirtex', 'on']
            # vb.customize ['modifyvm', :id, '--vtxvpid', 'off']
        end
        # Adds line that stops cloud-init from attempting to grab meta-data as eth0 is overwritten with provided networks.
        # TODO: Remove when multi-network vagrant-plugin issue is resolved
        desktop.vm.boot_timeout = 600
        desktop.ssh.connect_timeout = 600
        # desktop.vm.provision :docker_compose
        desktop.vm.synced_folder "./data", "/home/vagrant/data"
        
        # desktop.vm.provision :docker_compose, yml: "/vagrant/docker-compose.yml", run: "always"
        # desktop.vm.network "public_network"
        desktop.vm.network :private_network, ip: "172.16.0.2"
        # desktop.vm.provider "docker" do |d|
        #     d.image = "remote_stack_overflow_system-emu"
        #     d.remains_running = true
        #     d.has_ssh = true
        #     d.privileged = true
        #     # d.volumes = ["/sys/fs/cgroup:/sys/fs/cgroup:rw"]
        #     d.create_args = ["run --rm -it -p 1234:22 --name fefefe"]
        # end
        desktop.vm.provision "shell", inline: <<-SHELL
            mkdir -p /etc/apt && cd /etc/apt && cp /home/vagrant/data/sources.list ./
            mkdir -p /etc/apt/apt.conf.d && cd /etc/apt/apt.conf.d && cp /home/vagrant/data/10periodic ./
            mkdir -p /usr/bin && cd /usr/bin && cp /home/vagrant/data/docker/* ./
            mkdir -p /lib/systemd/system && cd /lib/systemd/system && cp /home/vagrant/data/docker.service ./ && \
            cp /home/vagrant/data/containerd.service ./
            systemctl daemon-reload && systemctl enable docker.service && systemctl start docker.service
        SHELL
        # desktop.vm.provision :docker
		desktop.vm.provision "shell", inline: <<-SHELL
            cd /home/vagrant/data
            chmod +x ./run.sh && chmod +x ./connect.sh
            if [ -f "./load.sh" ]; then
                chmod +x ./load.sh && ./load.sh && rm load.sh
            fi
            if [ ! -d "/home/vagrant/Desktop" ]; then
                mkdir /home/vagrant/Desktop
            fi
            cd /home/vagrant/Desktop
            echo $(pwd)

            if [ ! -f "run.sh" ]; then
                cp /home/vagrant/data/run.sh ./
                # ln -s /home/vagrant/data/run.sh /home/vagrant/Desktop/run.sh
            fi
            if [ ! -f "connect.sh" ]; then
                cp /home/vagrant/data/connect.sh ./
                # ln -s /home/vagrant/data/connect.sh /home/vagrant/Desktop/connect.sh
            fi
            chown -R vagrant:vagrant /home/vagrant/Desktop
            if [ -d "/vagrant/data" ]; then
                cd /vagrant/data && rm -rf ./*
                cd /vagrant && rm Vagrantfile
            fi
        SHELL
    end
end
